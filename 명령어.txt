1. react 패키치 설치 npm install -g create-react-app
2. react 프로젝트 생성create-react-app hello-world
3. react 프로젝트 실행npm start
4. build : npm run build
5. 웹서버 설치 : npm install -g serve, 
                      npx serve -s build : 1번만 사용하는 서버를 만들고, 
                      build 폴더를 document 루트로 하겠다.
6. console.log("STRING"); 사용가능.
7. event 명령어 : onClick={function(e){ 
                                                     e.preventDefault(); 
                                    }}
- e.preventDefault(); : 해당 태그의 가장 기본 기능을 막아준다.
8. bind(this) : 해당 function이 끝난후에 이어서 적어주면 해당 function안에서의 this는 해당 컴포넌트라고 인식된다.
9. setState({ }); : 동적으로 컴포넌트의 state 값을 바꿔주기 위해 사용하는 명령어, 
                      이렇게 작성해야 React가 state의 값이 바뀐 것을 인식할 수 있다.
- 처음 컴포넌트가 생성될 때 render 함수보다 먼저 constructor 함수가 실행되면서 state값이 정해지지만
동적으로 state의 값을 바꿀 경우에는 setState({ }); 함수를 써야 React가 state 값이 변경된 것을 인식하고
render() 함수를 재호출한다.
10. onChangePage이벤트 : 해당 컴포넌트의 페이지가 변경될 때 이벤트에 설치된 함수 호출
11. data-변수명 : 이러한 형태의 변수 선언은, 함수의 e.target.dataset.변수명 형태로 값을 불러올 수 있다.
12. shouldComponentUpdate(newProps, newState){ } : 컴포넌트에서 상태 변화에 따라 render 함수를 조절 가능하다.
- ex )    shouldComponentUpdate(newProps, newState){
   	 if(this.props.data === newProps.data){
	      return false; // 바뀐 값이 없다면 render 함수 타지 않는다.
	 }
	 return true; // 바뀐 값이 있다면 render 함수 탄다.
            }
     render(){ }

