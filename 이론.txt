1) 컴포넌트 : 사용자가 정의해서 태그를 만드는 것 
- 가독성, 재사용성, 유지보수
- 컴포넌트의 이름은 대문자로 시작!
- 컴포넌트를 만들때는 반드시 단 하나의 최상 태그로 시작하고 끝나야 한다.
2) public 폴더
- html  파일
3) src 폴더 
- js, css 파일
4) init 파일 : index.js
5) deploy(배포) : 실제 서비스 할 때 사용,
                        불필요한 용량을 다 제거하여 프로젝트의 용량을 줄여줌
6) props : 사용자가 컴포넌트를 사용하는 입장에서 중요한 것,
              attribute 개념 props를 사용하여 같은 이름의 컴포넌트로 다른 출력을 보여줄 수 있음
7) 크롬 확장프로그램 : react developer tool
8) state : props 값에 따라 내부의 구현에 필요한 데이터
- 상위 컴포넌트의 state 값을 하위 컴포넌트의 props 값으로 전달 가능
9) constructor : 어떠한 컴포넌트가 실행될 때 render 함수보다 먼저 실행되면서
                      해당 컴포넌트를 초기화 시켜주고싶은 코드는 constructor 안에다가 작성해야함.
- javascript 코드로 인식 시키기 위해서는 props 값에 중괄호 {} 사용
10) key : 동일한 여러개의 목록을 생성할 경우에는 각 항목마다 고유한 key props 값을 설정 해줘야한다.
11) render : React에서는 props의 값이나 state의 값이 바뀌면 해당되는 컴포넌트의 render() 함수가 호출된다.
-> 즉, 화면이 다시 그려진다.
12) render 함수 안에서 this는 해당 컴포넌트를 가리킴,
function 안에서의 this는 None 따라서 bind로 this(컴포넌트)를 넣어준다.
13) props : Read Only
     state : 값 변경 가능
- 상위 컴포넌트에서 하위 컴포넌트로 값을 전달하기 위해서는 props를 사용,
하위 컴포넌트에서 상위 컴포넌트에 명령을 주기 위해서는 이벤트를 만들어서 setState를 사용하여 state 값을 변경한다.

