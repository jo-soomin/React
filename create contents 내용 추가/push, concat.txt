push : 기존 원본 배열의 값이 변하는 것.

ex ) this.state.contents.push(
	{id:this.max_content_id, title: _title, desc: _desc}
       );      -> 기존 contents 배열에 인덱스 1개가 추가된다.

concat : 기존 원본 배열의 구성은 그대로고, 새로운 배열이 생성된다.

ex) var result = this.state.contents.concat(
          {id:this.max_content_id, title: _title, desc: _desc}
      ); -> 기존 contents 배열의 구성은 변함이 없고, 
             result 배열에 contents 배열의 기존 값과 새로 추가된 값이 포함되어 생성된다.

shouldComponentUpdate(newProps, newState){ } : 컴포넌트에서 상태 변화에 따라 render 함수를 조절 가능하다.
- ex )    shouldComponentUpdate(newProps, newState){
   	 if(this.props.data === newProps.data){
	      return false; // 바뀐 값이 없다면 render 함수 타지 않는다.
	 }
	 return true; // 바뀐 값이 있다면 render 함수 탄다.
            }
             render(){ }
